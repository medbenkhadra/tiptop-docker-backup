# prod 80
server {
    listen 80;
    # change to ur domain
    server_name  www.dsp5-archi-o23a-15m-g7.fr dsp5-archi-o23a-15m-g7.fr;
    # gzip to comporess content or data see # https://docs.nginx.com/nginx/admin-guide/web-server/compression/
    # gzip on;
    # gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    # gzip_vary on;
    # gzip_proxied any;
    # gzip_min_length 1400;
    # gzip_types text/plain text/css text/javascript image/svg+xml image/x-icon application/javascript application/x-javascript;
    # forward any request to upstreem https://${DOMAIN_APP}
    client_max_body_size 500M;
    location / {
        return 301 https://www.dsp5-archi-o23a-15m-g7.fr$request_uri;
    }
}

server {
 resolver 127.0.0.11 valid=30s ipv6=off;    
    listen 443 ssl;
    # change to ur domain
    server_name www.dsp5-archi-o23a-15m-g7.fr dsp5-archi-f23-15m-g7.fr;

    ssl_certificate /ssl-certif/fullchain.pem;  # Remplacez par le chemin de votre certificat SSL
    ssl_certificate_key /ssl-certif/privkey.pem;  # Remplacez par le chemin de votre clé privée SSL

    # Autres directives SSL facultatives
   gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types
    application/atom+xml
    application/geo+json
    application/javascript
    application/x-javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rdf+xml
    application/rss+xml
    application/xhtml+xml
    application/xml
    font/eot
    font/otf
    font/ttf
    image/svg+xml
    text/css
    text/javascript
    text/plain
    text/xml;
    
    add_header Set-Cookie "Secure; HttpOnly; SameSite=Lax";       

    location / {
        
        add_header Set-Cookie "Secure; HttpOnly; SameSite=Lax";
        #see request_limit defined at ../nginx.conf to limit max request
        # limit_req zone=request_limit;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;
        set $frontend frontend:3000;
        proxy_pass http://$frontend;
        #proxy_connect_timeout 1s;
    }

    location ~ ^/api/(/?)(.*) {
        # the default nginx dns resolver to keep nginx alive even when the server get down
        # resolver 127.0.0.11; 
        # see request_limit defined at ../nginx.conf to limit max request
        # see request_limit defined at ../nginx.conf to limit max request
       # see request_limit defined at ../nginx.conf to limit max request
       # limit_req zone=request_limit;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;

       # set $backend server:3000;
       set $backend backend:80;
        proxy_pass http://$backend/$2$1$is_args$args;
        # Working with socket io
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 600s;
       # proxy_connect_timeout 1s;
   }


 location /alaa2 {
        return 301 https://www.google.com;
    }

location ~ ^/routes/(/?)(.*) {
        # the default nginx dns resolver to keep nginx alive even when the server get down
        # resolver 127.0.0.11;
        # see request_limit defined at ../nginx.conf to limit max request
        # see request_limit defined at ../nginx.conf to limit max request
       # see request_limit defined at ../nginx.conf to limit max request
       # limit_req zone=request_limit;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;

       # set $backend server:3000;
       set $backend backend:80;
        proxy_pass http://$backend/$2$1$is_args$args;
        # Working with socket io
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 600s;
       # proxy_connect_timeout 1s;
   }


    # portainer /portainer/*
    location ~* ^/portainer/(.*)$ {
        # resolver 127.0.0.11 valid=30s;
        proxy_pass http://portainer:9000/$1$is_args$args;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Connection "";
        proxy_http_version 1.1;
    }
    
  
      
    # proxy pass portainer websocket 
    location ~ ^/portainer/api/websocket(/?)(.*) {
        # resolver 127.0.0.11 valid=30s;
        proxy_pass http://portainer:9000/api/websocket/$2;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;
    }


}





# dev 80
server {
    
    listen 80;
    # change to ur domain
    server_name  dev.dsp5-archi-o23a-15m-g7.fr www.dev.dsp5-archi-o23a-15m-g7.fr;
    # gzip to comporess content or data see # https://docs.nginx.com/nginx/admin-guide/web-server/compression/
    # gzip on;
    # gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    # gzip_vary on;
    # gzip_proxied any;
    # gzip_min_length 1400;
    # gzip_types text/plain text/css text/javascript image/svg+xml image/x-icon application/javascript application/x-javascript;
    # forward any request to upstreem https://${DOMAIN_APP}
    client_max_body_size 500M;
    location / {
        return 301 https://www.dev.dsp5-archi-f23-15m-g2.ovh$request_uri;
    }
}

server {
 resolver 127.0.0.11 valid=30s ipv6=off;
    listen 443 ssl;
    # change to ur domain
    server_name  dev.dsp5-archi-o23a-15m-g7.fr www.dev.dsp5-archi-o23a-15m-g7.fr;
    ssl_certificate /ssl-certif/fullchain.pem;  # Remplacez par le chemin de votre certificat SSL
    ssl_certificate_key /ssl-certif/privkey.pem;  # Remplacez par le chemin de votre clé privée SSL
   gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types
    application/atom+xml
    application/geo+json
    application/javascript
    application/x-javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rdf+xml
    application/rss+xml
    application/xhtml+xml
    application/xml
    font/eot
    font/otf
    font/ttf
    image/svg+xml
    text/css
    text/javascript
    text/plain
    text/xml;

    add_header Set-Cookie "Secure; HttpOnly; SameSite=Lax";

    location / {

        add_header Set-Cookie "Secure; HttpOnly; SameSite=Lax";
        #see request_limit defined at ../nginx.conf to limit max request
        # limit_req zone=request_limit;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;
        set $frontenddev frontend-dev:3000;
        proxy_pass http://$frontenddev;
        #proxy_connect_timeout 1s;
    }

    location ~ ^/api/(/?)(.*) {
        # the default nginx dns resolver to keep nginx alive even when the server get down
        # resolver 127.0.0.11;
        # see request_limit defined at ../nginx.conf to limit max request
        # see request_limit defined at ../nginx.conf to limit max request
       # see request_limit defined at ../nginx.conf to limit max request
       # limit_req zone=request_limit;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;

       # set $backend server:3000;
       set $backenddev backend-dev:80;
        proxy_pass http://$backenddev/$2$1$is_args$args;
        # Working with socket io
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 600s;
       # proxy_connect_timeout 1s;
   }


location ~ ^/routes/(/?)(.*) {
        # the default nginx dns resolver to keep nginx alive even when the server get down
        # resolver 127.0.0.11;
        # see request_limit defined at ../nginx.conf to limit max request
        # see request_limit defined at ../nginx.conf to limit max request
       # see request_limit defined at ../nginx.conf to limit max request
       # limit_req zone=request_limit;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;

       # set $backend server:3000;
       set $backenddev backend-dev:80;
        proxy_pass http://$backenddev/$2$1$is_args$args;
        # Working with socket io
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 600s;
       # proxy_connect_timeout 1s;
   }


    # portainer /portainer/*
    location ~* ^/portainer/(.*)$ {
        # resolver 127.0.0.11 valid=30s;
        proxy_pass http://portainer:9000/$1$is_args$args;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Connection "";
        proxy_http_version 1.1;
    }



    # proxy pass portainer websocket
    location ~ ^/portainer/api/websocket(/?)(.*) {
        # resolver 127.0.0.11 valid=30s;
        proxy_pass http://portainer:9000/api/websocket/$2;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;
    }


}

# staging 80
server {
    
    listen 80;
    # change to ur domain
    server_name  www.staging.dsp5-archi-o23a-15m-g7.fr staging.dsp5-archi-o23a-15m-g7.fr;
    # gzip to comporess content or data see # https://docs.nginx.com/nginx/admin-guide/web-server/compression/
    # gzip on;
    # gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    # gzip_vary on;
    # gzip_proxied any;
    # gzip_min_length 1400;
    # gzip_types text/plain text/css text/javascript image/svg+xml image/x-icon application/javascript application/x-javascript;
    # forward any request to upstreem https://${DOMAIN_APP}
    client_max_body_size 500M;
    location / {
        return 301 https://www.staging.dsp5-archi-f23-15m-g2.ovh$request_uri;
    }
}


# staging 443
server {
 resolver 127.0.0.11 valid=30s ipv6=off;
    listen 443 ssl;
    # change to ur domain
    server_name  www.staging.dsp5-archi-o23a-15m-g7.fr staging.dsp5-archi-o23a-15m-g7.fr;
    ssl_certificate /ssl-certif/fullchain.pem;  #Remplacez par le chemin de votre certificat SSL
    ssl_certificate_key /ssl-certif/privkey.pem;  #Remplacez par le chemin de votre clé privée SSL
   gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types
    application/atom+xml
    application/geo+json
    application/javascript
    application/x-javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rdf+xml
    application/rss+xml
    application/xhtml+xml
    application/xml
    font/eot
    font/otf
    font/ttf
    image/svg+xml
    text/css
    text/javascript
    text/plain
    text/xml;

    add_header Set-Cookie "Secure; HttpOnly; SameSite=Lax";

    location / {

        add_header Set-Cookie "Secure; HttpOnly; SameSite=Lax";
        #see request_limit defined at ../nginx.conf to limit max request
        # limit_req zone=request_limit;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;
        set $frontendstaging frontend-staging:3000;
        proxy_pass http://$frontendstaging;
        #proxy_connect_timeout 1s;
    }

    location ~ ^/api/(/?)(.*) {
        # the default nginx dns resolver to keep nginx alive even when the server get down
        # resolver 127.0.0.11;
        # see request_limit defined at ../nginx.conf to limit max request
        # see request_limit defined at ../nginx.conf to limit max request
       # see request_limit defined at ../nginx.conf to limit max request
       # limit_req zone=request_limit;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;

       # set $backend server:3000;
       set $backendstaging backend-staging:80;
        proxy_pass http://$backendstaging/$2$1$is_args$args;
        # Working with socket io
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 600s;
       # proxy_connect_timeout 1s;
   }


location ~ ^/routes/(/?)(.*) {
        # the default nginx dns resolver to keep nginx alive even when the server get down
        # resolver 127.0.0.11;
        # see request_limit defined at ../nginx.conf to limit max request
        # see request_limit defined at ../nginx.conf to limit max request
       # see request_limit defined at ../nginx.conf to limit max request
       # limit_req zone=request_limit;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;

       # set $backend server:3000;
       set $backendstaging backend-staging:80;
        proxy_pass http://$backendstaging/$2$1$is_args$args;
        # Working with socket io
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 600s;
       # proxy_connect_timeout 1s;
   }



}



# preprod 80
server {
    
    listen 80;
    # change to ur domain
    server_name  preprod.dsp5-archi-o23a-15m-g7.fr www.preprod.dsp5-archi-o23a-15m-g7.fr;
    # gzip to comporess content or data see # https://docs.nginx.com/nginx/admin-guide/web-server/compression/
    # gzip on;
    # gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    # gzip_vary on;
    # gzip_proxied any;
    # gzip_min_length 1400;
    # gzip_types text/plain text/css text/javascript image/svg+xml image/x-icon application/javascript application/x-javascript;
    # forward any request to upstreem https://${DOMAIN_APP}
    client_max_body_size 500M;
    location / {
        return 301 https://www.preprod.dsp5-archi-f23-15m-g2.ovh$request_uri;
    }
}


# preprod 443
server {
 resolver 127.0.0.11 valid=30s ipv6=off;
    listen 443 ssl;
    # change to ur domain
    server_name  www.preprod.dsp5-archi-o23a-15m-g7.fr preprod.dsp5-archi-o23a-15m-g7.fr;
    ssl_certificate /ssl-certif/fullchain.pem;  #Remplacez par le chemin de votre certificat SSL
    ssl_certificate_key /ssl-certif/privkey.pem;  #Remplacez par le chemin de votre clé privée SSL
   gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types
    application/atom+xml
    application/geo+json
    application/javascript
    application/x-javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rdf+xml
    application/rss+xml
    application/xhtml+xml
    application/xml
    font/eot
    font/otf
    font/ttf
    image/svg+xml
    text/css
    text/javascript
    text/plain
    text/xml;

    add_header Set-Cookie "Secure; HttpOnly; SameSite=Lax";

    location / {

        add_header Set-Cookie "Secure; HttpOnly; SameSite=Lax";
        #see request_limit defined at ../nginx.conf to limit max request
        # limit_req zone=request_limit;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;
        set $frontendpreprod frontend-preprod:3000;
        proxy_pass http://$frontendpreprod;
        #proxy_connect_timeout 1s;
    }

    location ~ ^/api/(/?)(.*) {
        # the default nginx dns resolver to keep nginx alive even when the server get down
        # resolver 127.0.0.11;
        # see request_limit defined at ../nginx.conf to limit max request
        # see request_limit defined at ../nginx.conf to limit max request
       # see request_limit defined at ../nginx.conf to limit max request
       # limit_req zone=request_limit;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;

       # set $backend server:3000;
       set $backendpreprod backend-preprod:80;
        proxy_pass http://$backendpreprod/$2$1$is_args$args;
        # Working with socket io
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 600s;
       # proxy_connect_timeout 1s;
   }


location ~ ^/routes/(/?)(.*) {
        # the default nginx dns resolver to keep nginx alive even when the server get down
        # resolver 127.0.0.11;
        # see request_limit defined at ../nginx.conf to limit max request
        # see request_limit defined at ../nginx.conf to limit max request
       # see request_limit defined at ../nginx.conf to limit max request
       # limit_req zone=request_limit;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;

       # set $backend server:3000;
       set $backendpreprod backend-preprod:80;
        proxy_pass http://$backendpreprod/$2$1$is_args$args;
        # Working with socket io
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 600s;
       # proxy_connect_timeout 1s;
   }



}
